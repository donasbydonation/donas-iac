name: AWS infrastructure CD

on:
  push:
    branches:
      - main

jobs:
  terraform-apply:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_VAR_APP_WEB_PORT: ${{ secrets.APP_WEB_PORT }}
      TF_VAR_APP_API_PORT: ${{ secrets.APP_API_PORT }}
      TF_VAR_AWS_RDS_ENGINE: ${{ secrets.AWS_RDS_ENGINE }}
      TF_VAR_AWS_ASG_USER_DATA: ${{ secrets.AWS_ASG_USER_DATA }}
      TF_VAR_AWS_RDS_DBNAME: ${{ secrets.AWS_RDS_DBNAME }}
      TF_VAR_AWS_RDS_PORT: ${{ secrets.AWS_RDS_PORT }}
      TF_VAR_AWS_RDS_USERNAME: ${{ secrets.AWS_RDS_USERNAME }}
      TF_VAR_AWS_RDS_PASSWORD: ${{ secrets.AWS_RDS_PASSWORD }}
      TF_VAR_AWS_CODEDEPLOY_APP_NAME: ${{ secrets.AWS_CODEDEPLOY_APP_NAME }}
      TF_VAR_AWS_CODEDEPLOY_DEPLOY_GROUP_NAME: ${{ secrets.AWS_CODEDEPLOY_DEPLOY_GROUP_NAME }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.1
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.0
      - name: Terraform Format
        id: fmt
        run: terraform fmt -check
        working-directory: terraform
      - name: Terraform init
        run: terraform init -input=false
        working-directory: terraform
      - name: Terraform apply
        run: terraform apply -auto-approve -input=false
        working-directory: terraform

  aws-asg-auto-refresh:
    needs: terraform-apply
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.1
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2
      - name: Start instance refresh
        run: |
          aws autoscaling start-instance-refresh \
            --no-paginate \
            --auto-scaling-group-name ${{ secrets.AWS_ASG_NAME }}
